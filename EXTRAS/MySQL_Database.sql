/*DROPPING ALL CONTRAINTS*/

ALTER TABLE MATRIX.SKILLS
DROP FOREIGN KEY FK_DIV_SKILL;

ALTER TABLE MATRIX.ROLES
DROP FOREIGN KEY FK_DIV_ROLE;

ALTER TABLE MATRIX.B_EMPLOYEE_ROLES
DROP FOREIGN KEY FK_EMP_ROLE, 
DROP FOREIGN KEY FK_ROLE;

ALTER TABLE MATRIX.B_EMPLOYEE_SKILLS
DROP FOREIGN KEY FK_EMP_SKILL, 
DROP FOREIGN KEY  FK_SKILL, 
DROP FOREIGN KEY  FK_LEVEL;

/*DROPPING ALL TABLES*/
DROP TABLE IF EXISTS MATRIX.USERS;
DROP TABLE IF EXISTS MATRIX.EMPLOYEES;
DROP TABLE IF EXISTS MATRIX.SKILLS;
DROP TABLE IF EXISTS MATRIX.DIVISIONS;
DROP TABLE IF EXISTS MATRIX.M_SKILLS_LEVEL;
DROP TABLE IF EXISTS MATRIX.B_EMPLOYEE_SKILLS;
DROP TABLE IF EXISTS MATRIX.ROLES;
DROP TABLE IF EXISTS MATRIX.B_EMPLOYEE_ROLES;

DROP SCHEMA IF EXISTS MATRIX;
CREATE SCHEMA MATRIX;

CREATE TABLE MATRIX.USERS
(EMAIL VARCHAR(60) PRIMARY KEY,
PASS VARCHAR(60) NOT NULL);

CREATE TABLE MATRIX.EMPLOYEES
(EMP_ID INT AUTO_INCREMENT PRIMARY KEY,
NAMES VARCHAR(60) NOT NULL,
SHORE VARCHAR(20) NOT NULL);

CREATE TABLE MATRIX.DIVISIONS
(DIVISION_ID INT AUTO_INCREMENT PRIMARY KEY,
 DIV_DESCRIPTION VARCHAR(60) NOT NULL);

CREATE TABLE MATRIX.SKILLS
(SKILL_ID INT AUTO_INCREMENT PRIMARY KEY, 
SKILL_DESCRIPTION VARCHAR(60) NOT NULL,
DIVISION_ID INT NOT NULL);

CREATE TABLE MATRIX.M_SKILLS_LEVEL
(LEVEL_ID INT AUTO_INCREMENT PRIMARY KEY,
LEVEL_DESCR VARCHAR(30) NOT NULL);

CREATE TABLE MATRIX.B_EMPLOYEE_SKILLS
(EMPLOYEE_ID INT NOT NULL,
SKILL_ID INT NOT NULL,
LEVEL_ID INT NOT NULL,
PRIMARY KEY (EMPLOYEE_ID, SKILL_ID));

CREATE TABLE MATRIX.ROLES
(ROLE_ID INT AUTO_INCREMENT PRIMARY KEY,
 ROLE_DESCRIPTION VARCHAR(60) NOT NULL,
 DIVISION_ID INT NOT NULL);
 
CREATE TABLE MATRIX.B_EMPLOYEE_ROLES
(EMPLOYEE_ID INT NOT NULL,
 ROLE_ID INT NOT NULL,
 PRIMARY KEY (EMPLOYEE_ID, ROLE_ID));
 
/* ADDING CONTRAINTS

-- FOR SKILLS TABLE*/
ALTER TABLE MATRIX.SKILLS
ADD CONSTRAINT FK_DIV_SKILL
FOREIGN KEY (DIVISION_ID) 
REFERENCES MATRIX.DIVISIONS(DIVISION_ID);

/* FOR ROLES TABLE*/
ALTER TABLE MATRIX.ROLES
ADD CONSTRAINT FK_DIV_ROLE
FOREIGN KEY (DIVISION_ID) 
REFERENCES MATRIX.DIVISIONS(DIVISION_ID);

/* FOR EMPLOYEE ROLE BRIDGE*/
ALTER TABLE MATRIX.B_EMPLOYEE_ROLES
ADD CONSTRAINT FK_EMP_ROLE
FOREIGN KEY (EMPLOYEE_ID) 
REFERENCES MATRIX.EMPLOYEES(EMP_ID),
ADD CONSTRAINT FK_ROLE
FOREIGN KEY (ROLE_ID)
REFERENCES MATRIX.ROLES(ROLE_ID);

/* FOR EMPLOYEE SKILLS BRIDGE*/
ALTER TABLE MATRIX.B_EMPLOYEE_SKILLS
ADD CONSTRAINT FK_EMP_SKILL
FOREIGN KEY (EMPLOYEE_ID) 
REFERENCES MATRIX.EMPLOYEES(EMP_ID),
ADD CONSTRAINT FK_SKILL
FOREIGN KEY (SKILL_ID)
REFERENCES MATRIX.SKILLS(SKILL_ID),
ADD CONSTRAINT FK_LEVEL 
FOREIGN KEY (LEVEL_ID)
REFERENCES MATRIX.M_SKILLS_LEVEL(LEVEL_ID);




/*INSERING LEVELS */
INSERT INTO MATRIX.M_SKILLS_LEVEL(LEVEL_DESCR)
VALUES('Entry Level');

INSERT INTO MATRIX.M_SKILLS_LEVEL(LEVEL_DESCR)
VALUES('Intermediate');

INSERT INTO MATRIX.M_SKILLS_LEVEL(LEVEL_DESCR)
VALUES('Advanced');

INSERT INTO MATRIX.M_SKILLS_LEVEL(LEVEL_DESCR)
VALUES('Certified');

/*INSERING USERS */
INSERT INTO MATRIX.USERS(EMAIL, PASS)
VALUES('andile.hlophe@zensar.com', 'Zxc@123');

INSERT INTO MATRIX.USERS(EMAIL, PASS)
VALUES('tsokolo.khama@zensar.com', 'Zxc@123');

INSERT INTO MATRIX.USERS(EMAIL, PASS)
VALUES('ntshovelo.makwarela@zensar.com', 'Zxc@123');

/*INSERING DIVISIONS */
INSERT INTO MATRIX.DIVISIONS(DIV_DESCRIPTION)
VALUES('Testing');

INSERT INTO MATRIX.DIVISIONS(DIV_DESCRIPTION)
VALUES('Devops');

INSERT INTO MATRIX.DIVISIONS(DIV_DESCRIPTION)
VALUES('Incident Management');

INSERT INTO MATRIX.DIVISIONS(DIV_DESCRIPTION)
VALUES('OPs');


/*INSERING SKILLS FOR TESTING DIVISION*/
INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('VMP', 1);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Mobile App', 1);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Fitnesse', 1);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Test Rail', 1);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Jira', 1);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Automation', 1);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('VSP', 1);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Gatling', 1);


/*INSERING SKILLS FOR DEVOPS DIVISION*/

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Grafana', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Azure', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Dynatrace', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('AWS', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Foundation', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Operations Intermediate', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Transition Intermediate', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Design Intermediate', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Strategy Intermediate', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL CSI Intermediate', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('CA Tool', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Generali - Service Now', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Git', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('OpenShift Dashboard', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Dashbord', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Kubectl', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Clustering / Install', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Docker', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Prometheus / Grafanat', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Centos / RHEL', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Debian / Ubuntu', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ElasticSearch', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Fluent', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Kibana', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('CFEngine', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Ansible', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Terraform', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Java', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Python', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Jenkins', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Gerrit', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Bitbucket', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Fitnesse', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Gatling', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Obsidian', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Tomcat', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Hashicorp Vault', 2);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Kafka / Zookeeper', 2);


/*INSERING SKILLS FOR INCIDENT MANAGEMENT DIVISION*/
INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Grafana', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Azure', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Dynatrace', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('AWS', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Foundation', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Operations Intermediate', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Design Intermediate', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Strategy Intermediate', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service CSI Intermediate', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('CA Tool', 3);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Generali - Service Now', 3);

/*INSERING SKILLS FOR OPs DIVISION*/
INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('WSO2 API', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('LifeRay', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Zuul/Swagger', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Openshift', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('MDA', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Kibana', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Linux Server Comands', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Kubernetes Architecture', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Kafka', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Fitnesse', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('Database', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('CA Tool', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('V1', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('VDP', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('AR', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Foundation', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Operations Intermediate', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Transition Intermediate', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Design Intermediate', 4);

INSERT INTO MATRIX.SKILLS(SKILL_DESCRIPTION, DIVISION_ID)
VALUES('ITIL Service Strategy Intermediate', 4);



/*INSERING ROLES FOR TESTING DIVISION*/
INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Sr. Test Manager', 1);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Test Analyst', 1);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Sr. Lead', 1);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Tester', 1);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Jr. Tester', 1);


/*INSERING ROLES FOR TESTING DIVISION*/
INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('DevOps Architect', 2);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('DevOps Engineer', 2);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Senior DevOps Engineer', 2);


/*INSERING ROLES FOR INCIDENT MANAGEMENT DIVISION*/
INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Incident Coordinator', 3);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Incident Analyst', 3);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Monitoring Analyst', 3);


/*INSERING ROLES FOR OPs DIVISION*/
INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Team Lead', 4);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Operation Analyst', 4);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Buisness Analyst', 4);

INSERT INTO MATRIX.ROLES(ROLE_DESCRIPTION, DIVISION_ID)
VALUES('Problem Manager', 4);











